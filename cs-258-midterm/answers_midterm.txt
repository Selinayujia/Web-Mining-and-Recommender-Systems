{'Q1a': 1.9704162943957526, 'Q1b': 2.05196610339507, 'Q2': [2.666035950804163, 2.1542691579943236, 2.0280931357090295], 'Q3a': [[1, 4, 4], [1, 4, 4, 4]], 'Q3b': [1.5723325467509486, 1.5610886662971528, 1.523697801011684], 'Q4a': [[1, 4, 4, 4, 4, 5, 4.2, 4.2, 4.2, 4.2, 4.2], [1, 0, 4, 0, 4, 0, 4, 0, 4, 0, 5, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]], 'Q4b': [1.5480131297119455, 1.5354064599216093], 'Q5a': [1, 121, 0, 4], 'Q5b': [2384, 168945, 86232, 3615, 0.4702652880062319], 'Q6a': [0, 0, 0, 0, 0, 1, 75, 0, 1], 'Q6b': 0.17054998141954658, 'Q7': [0.13345081097468547, 0.13310974685463095, 0.14302713354555108, 0.14268606942549644, 0.14490298620585118, 0.1, 0.21333748810528996], 'Q8': 1.8164934412791371, 'Q9': [1.742012484444442, 2.052681872005889, 1.452063234864505], 'Q10': ("While in the previous approach when an item was never seen before, we return the average of all item all user's rating. However, the user who buys this cold star item may have a rating tendency (tend to overall give high ratings or overall give low rating) The approach here is that instead of taking average of all user's rating on all item, if the user is seen before in the training set, we take the average of all this user's previous rating on previous items they bought. If the user also didn't buy other things before, we then still return the old rating average among all user all item", 1.6696633366192306)}
